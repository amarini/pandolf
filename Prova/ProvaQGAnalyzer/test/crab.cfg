[CRAB]
jobtype = cmssw
scheduler = glite
use_server = 1
#server_name = desy
 
[CMSSW]
### The data you want to access (to be found on DBS) 
### /primarydataset/datatier/processeddataset
### can be "None" for no input
#datasetpath = /DYJetsToLL_TuneZ2_M-50_7TeV-madgraph-tauola/Winter10-START39_V8-v2/GEN-SIM-RECO	
datasetpath =/QCD_Pt-15to3000_TuneZ2_Flat_8TeV_pythia6/Summer12_DR53X-PU_S10_START53_V7A-v1/AODSIM

### DBS/DLS options (default currently shown)
#dbs_url = http://cmsdoc.cern.ch/cms/test/aprom/DBS/CGIServer/prodquery

### The ParameterSet you want to use
#pset= config_GOODCOLL_cfg.py
pset=config.py

### Total number of events to be accessed: -1 means all ("-1" is not usable if no input)
total_number_of_events = -1

### Number of events to be processed per job
events_per_job = 40000

### The output files produced by your application (comma separated list)
output_file = output.root

[USER]
additional_input_files = axis2_QCJet0.txt,axis2_QCJet0_F.txt,ptD_QCJet0.txt,ptD_QCJet0_F.txt,nPFCand_QC_ptCutJet0.txt,nPFCand_QC_ptCutJet0_F.txt
#additional_input_files = QGTaggerConfig_nCharged_AK5PF.txt,QGTaggerConfig_nNeutral_AK5PF.txt,QGTaggerConfig_ptD_AK5PF.txt
### RETRIEVE JOB OUTPUT INTO UI ###
## to have back the job executable output into UI (return_data= 1)
return_data = 0

### COPY JOB OUTPUT INTO A SE ###
## if you want to copy the CMS executable output into a SE (i:e castor)
### WARNING: if the copy fails and return_data = 0, the output is lost
copy_data = 1

storage_element = srm-eoscms.cern.ch
storage_path=/srm/v2/server?SFN=/eos/cms/store
user_remote_dir=group/phys_higgs/pandolf/PROVA/PROVA_QG/QCD_Pt-15to3000_TuneZ2_Flat_8TeV_pythia6_Summer12_DR53X-PU_S10_START53_V7A-v1
check_user_remote_dir=0


## common output dir for logfiles for all multicrab jobs
#check_user_remote_dir=0


[GRID]
# to run on cmsgshort
#max_cpu_time= 30
#requirements = RegExp("cmsgshort",other.GlueCEUniqueID)

# resource broker
rb = CERN
#rb = CNAF
## CMS myproxy server, to proxy delegation
proxy_server = myproxy.cern.ch 

## CE Black List: all the CE whose name contains the following strings (comma
## separated list) will not be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)

#se_white_list = T2_IT_Rome
se_black_list = T2_RU,T3*,T*_TW
ce_black_list = cmsrm-cream01.roma1.infn.it


## CE White List: only the CE whose name contains the following strings (comma
## separated list) will be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#ce_white_list = infn, in2p3, fnal, cern, cnaf
#ce_white_list = roma1
#se_white_list = roma1.infn.it

